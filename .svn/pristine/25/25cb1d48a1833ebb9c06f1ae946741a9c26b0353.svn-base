package com.syhbuy.spay.admin.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;

import com.syhbuy.spay.admin.entity.AdminUser;

public interface AdminUserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADMIN_USER
     *
     * @mbggenerated
     */
    @Insert({
        "insert into T_ADMIN_USER (ID, USER_NAME, ",
        "ACCOUNT_NAME, PASSWORD, ",
        "CREDENTIALS_SALT, DESCRIPTION, ",
        "LOCKED, CREATE_TIME, ",
        "DELETE_STATUS)",
        "values (#{id,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, ",
        "#{accountName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, ",
        "#{credentialsSalt,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, ",
        "#{locked,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{deleteStatus,jdbcType=VARCHAR})"
    })
    int insert(AdminUser record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table T_ADMIN_USER
     *
     * @mbggenerated
     */
    int insertSelective(AdminUser record);

    @Select({
            "select",
            "ID, USER_NAME, ACCOUNT_NAME, PASSWORD, CREDENTIALS_SALT, DESCRIPTION, LOCKED, CREATE_TIME, ",
            "DELETE_STATUS",
            "from t_admin_user",
            "where ACCOUNT_NAME = #{accountName,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    AdminUser selectByAccountName(String accountName);

    @Select({
            "select",
            "ID, USER_NAME, ACCOUNT_NAME, PASSWORD, CREDENTIALS_SALT, DESCRIPTION, LOCKED, CREATE_TIME, ",
            "DELETE_STATUS",
            "from t_admin_user",
            "where ID = #{userId,jdbcType=VARCHAR}"
    })
    @ResultMap("BaseResultMap")
    AdminUser selectByUserId(String userId);

    AdminUser selectUserRoleByUserId(String userId);


    List<AdminUser> findPage(AdminUser adminUser);

    void updateAdminUserByUserId(AdminUser adminUser) ;

    int checkUserRole(String roleId,String userId);

    void deleteUserRole (Map<String, Object> params);
}