<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syhbuy.spay.admin.dao.ResourcesMapper">
  <resultMap id="BaseResultMap" type="com.syhbuy.spay.admin.entity.Resources">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
        <arg column="ID" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="RES_NAME" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="PARENT_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="RES_KEY" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="TYPE" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="RES_URL" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="RES_LEVEL" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
        <arg column="ICON" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="IS_HIDE" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="DESCRIPTION" javaType="java.lang.String" jdbcType="VARCHAR" />
        <arg column="SORT" javaType="java.math.BigDecimal" jdbcType="DECIMAL" />
    </constructor>
  </resultMap>

  <resultMap id="RoleResultMap" type="com.syhbuy.spay.admin.entity.Resources" extends="BaseResultMap">
    <collection property="roles" ofType="com.syhbuy.spay.admin.entity.Role">
      <id property="id" column="ROLE_ID" />
      <id property="state" column="STATE" />
      <id property="name" column="NAME" />
      <id property="roleKey" column="ROLE_KEY" />
      <id property="description" column="ROLE_DESCRIPTION" />
    </collection>

  </resultMap>

    <resultMap id="TreeMap" type="com.syhbuy.spay.admin.base.util.TreeNode">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <constructor>
            <arg column="NODE_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="ROLE_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="RES_ID" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="TEXT" javaType="java.lang.String" jdbcType="VARCHAR" />
            <arg column="STATE" javaType="java.lang.Boolean" jdbcType="VARCHAR" />
        </constructor>
    </resultMap>

  <insert id="insertSelective" parameterType="com.syhbuy.spay.admin.entity.Resources">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
      <selectKey keyProperty="id" resultType="java.lang.String" order="BEFORE">
          select lpad(T_ADMIN_RESOURCES_SEQUENCE.nextval,32,0) from dual
      </selectKey>

    insert into T_ADMIN_RESOURCES
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="resName != null">
        RES_NAME,
      </if>
      <if test="parentId != null">
        PARENT_ID,
      </if>
      <if test="resKey != null">
        RES_KEY,
      </if>
      <if test="type != null">
        TYPE,
      </if>
      <if test="resUrl != null">
        RES_URL,
      </if>
      <if test="resLevel != null">
        RES_LEVEL,
      </if>
      <if test="icon != null">
        ICON,
      </if>
      <if test="isHide != null">
        IS_HIDE,
      </if>
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="sort != null">
        SORT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="resName != null">
        #{resName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="resKey != null">
        #{resKey,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="resUrl != null">
        #{resUrl,jdbcType=VARCHAR},
      </if>
      <if test="resLevel != null">
        #{resLevel,jdbcType=DECIMAL},
      </if>
      <if test="icon != null">
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="isHide != null">
        #{isHide,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>

<!--用户直接关联资源
  <select id="findResByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
      select r.* from t_admin_res_user ru INNER join t_admin_resources r on ru.res_id = r.id where ru.user_Id = #{userId} order by r.sort
  </select>
-->

  <!--用户关联角色，角色关联资源-->
  <select id="findResByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select distinct are.*
  from t_admin_role_user aru
 inner join t_admin_role ar
    on aru.role_id = ar.id
 inner join t_admin_res_role arr
    on ar.id = arr.role_id
 inner join t_admin_resources are
    on arr.res_id = are.id
 where aru.user_id = #{userId,jdbcType=VARCHAR}
 order by are.sort

  </select>

  <!--用户直接关联资源
  <select id="findBtnByMenu" parameterType="java.lang.String" resultMap="BaseResultMap">
    select r.* from t_admin_res_user ru left join t_admin_resources r on ru.res_id = r.id where ru.user_Id = #{userId} and r.parent_id = #{parentId} order by r.sort
  </select>
-->

  <select id="findBtnByMenu" parameterType="java.lang.String" resultMap="BaseResultMap">
     select distinct are.*
  from t_admin_role_user aru
 inner join t_admin_role ar
    on aru.role_id = ar.id
 inner join t_admin_res_role arr
    on ar.id = arr.role_id
 inner join t_admin_resources are
    on arr.res_id = are.id
 where aru.user_id = #{userId}
    and are.parent_id = #{parentId}
 order by are.sort
  </select>

  <select id="findPage" parameterType="com.syhbuy.spay.admin.entity.Resources" resultMap="BaseResultMap">
    select t.* from (select ar.*,level from t_admin_resources ar start with ar.parent_id ='0' connect by prior ar.id=ar.parent_id order siblings by ar.sort) t  where 1=1
    <if test="id != null and id != ''" >
      and id = #{id,jdbcType=VARCHAR}
    </if>
    <if test="resName != null and resName !=''" >
      and RES_NAME = #{resName,jdbcType=VARCHAR}
    </if>
    <if test="parentId != null and parentId !=''" >
      and PARENT_ID = #{parentId,jdbcType=VARCHAR}
    </if>
    <if test="resKey != null" >
      and RES_KEY = #{resKey,jdbcType=VARCHAR}
    </if>
  </select>

    <select id="findResTreeByRoleId" parameterType="java.lang.String" resultMap="TreeMap">
      <!--
              select ar.ID AS NODE_ID, ar.RES_NAME AS TEXT from  t_admin_resources ar  left join t_admin_res_role arr  on ar.id = arr.res_id where ar.parent_id = #{parentId} and arr.role_id = #{roleId} order by sort
      -->
        select ar.ID AS NODE_ID, #{0} as ROLE_ID ,ar.ID as RES_ID, ar.RES_NAME AS TEXT,decode(arr.Role_Id,NULL,0,1) AS STATE
        from t_admin_resources ar
        left join (select * from t_admin_res_role where role_id = #{0}) arr on ar.id = arr.res_id
        where ar.parent_id =#{1} order by ar.sort

     </select>

    <select id="checkAuthorization" parameterType="java.lang.String" resultType="int">
      select  count(1) from  t_admin_res_role where role_id = #{0} and res_id = #{1}
    </select>

    <insert id="insertAuthorization" parameterType="java.lang.String" >
      insert into t_admin_res_role (ROLE_ID,RES_ID) VALUES (#{0},#{1})
    </insert>

  <!-- 删除用户角色授权 -->
  <delete id="deleteResRole" parameterType="java.util.Map">
    delete from t_admin_res_role t where t.ROLE_ID = #{roleId}
    <if test="resIds!=null ">
      and t.RES_ID not in
      <foreach item="resId"  collection="resIds" open="(" separator="," close=")">
        #{resId}
      </foreach>
    </if>
  </delete>
  <select id="selectResRole"  resultMap="RoleResultMap">
  select ar.*,ro.id AS ROLE_ID,ro.STATE,ro.NAME,ro.ROLE_KEY,ro.DESCRIPTION as ROLE_DESCRIPTION
  from t_admin_resources ar
  left join t_admin_res_role rr
  on ar.id = rr.res_id
  left join t_admin_role ro
  on rr.role_id = ro.id
</select>
        </mapper>